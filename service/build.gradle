buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.maven.apache.org/maven2" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.4.0")
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'application'
    id 'java'
    id 'maven-publish'
}

application {
    mainClass.set('com.williamHill.scoreBoard')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://packages.confluent.io/maven' }
}

configurations {
    jaxb
}

jar {
    enabled = true
    group = "com.williamHill"
    manifest { attributes "Main-Class": "com.williamHill.scoreBoard.ScoreBoardApplication" }
}

bootJar {
    archiveClassifier.set('boot')
}

defaultTasks 'run'

compileJava {
    options.compilerArgs = ['-Amapstruct.defaultComponentModel=spring', '-Xlint:unchecked']
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter:2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-test:2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.4.0'
    implementation 'org.liquibase:liquibase-core:3.8.0'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.0'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.3'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars:sockjs-client:1.0.2'
    implementation 'org.webjars:stomp-websocket:2.3.3'
    implementation 'org.webjars:bootstrap:3.3.7'
    implementation 'org.webjars:jquery:3.1.1-1'

    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.11.3'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.3'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-json-org', version: '2.11.3'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.22'
    compileOnly 'org.projectlombok:lombok:1.18.14'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor 'org.projectlombok:lombok:1.18.14'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.0.Final'

    testImplementation 'org.apache.httpcomponents:httpclient'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "junit", module: "junit"
    }
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.4.0'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.0'
    runtimeOnly 'com.h2database:h2'
}

test {
    // Enables Junit 5 for Gradle
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}
